{"version":3,"sources":["API/data-fetch.ts","components/CaterogyWiseContent/CategoryData.tsx","components/MainNavigation/MainNavigation.tsx","API/category-urls.ts","screens/Home/Home.tsx","screens/Cart/Cart.tsx","screens/Liked/Liked.tsx","screens/Profile/Profile.tsx","screens/App.tsx","reportWebVitals.ts","redux/reducers/home-reducer.tsx","redux/constants.ts","redux/reducers/reducers.ts","index.tsx","redux/store/create-store.ts"],"names":["instance","axios","create","baseURL","CategoryData","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","backdrop_path","src","poster_path","alt","name","onClick","videoId","MainNavigation","props","to","cartItemNumber","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Home","CartPage","cartItemCount","useSelector","state","console","log","Fragment","landings","cartSum","ProfilePage","App","path","component","HomePage","exact","LikedPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","rawData","loading","likedSum","isLightTheme","ACTION_HANDLERS","action","filter","updatedData","item","year","Date","getFullYear","AppReducer","handler","type","makeRootReducer","combineReducers","HomeReducer","store","initialState","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92f3b94a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;\n","import React, { useState, useEffect } from 'react';\nimport axios from '../../API/data-fetch';\nimport './CategoryData.css';\nimport Youtube from 'react-youtube';\nimport { FaCartPlus, FaRegHeart, FaInfoCircle } from \"react-icons/fa\";\n\ninterface ScreenProps {\n    title: string\n    fetchUrl: string\n    isLargeRow?: boolean\n}\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/original';\n\nfunction CategoryData({ title, fetchUrl, isLargeRow } : ScreenProps) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n\n  // Options for react-youtube\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = async (movie: any) => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  return (\n    <div className='row'>\n      <h2>{title}</h2>\n\n      <div className='row_posters'>\n        {movies.map(\n          (movie: any) =>\n            movie.backdrop_path !== null && (\n                // <li>\n                    <img\n                      className={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n                      src={`${baseImgUrl}${\n                        isLargeRow ? movie.poster_path : movie.backdrop_path\n                      }`}\n                      alt={movie.name}\n                      key={movie.id}\n                      onClick={() => handleClick(movie)}\n                    />\n                // </li>\n            )\n        )}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl}/>}\n    </div>\n  );\n}\n\nexport default CategoryData;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FaCartArrowDown, FaHandHoldingHeart, FaHome, FaUserAlt, FaStream } from \"react-icons/fa\";\n\nimport './MainNavigation.css';\n\nconst MainNavigation = (props: any) => (\n  <header className=\"main-navigation\">\n    <nav>\n      <ul className='home_icon'>\n        <li>\n          <NavLink to=\"/\"><FaHome /></NavLink>\n        </li>\n      </ul>\n      <ul className='header_title'>\n        <li className='web-streamer'>\n          Web-Streamer <FaStream />\n        </li>\n      </ul>\n      <ul className='my_content'>\n        <li>\n          <NavLink to=\"/cart\"><FaCartArrowDown /> ({props.cartItemNumber})</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/liked\"><FaHandHoldingHeart /> ({props.cartItemNumber})</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/profile\"><FaUserAlt /></NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default MainNavigation;\n","const API_KEY = 'fb34530271b349314af0de263d16ab5a';\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import React from 'react';\nimport CategoryData from '../../components/CaterogyWiseContent/CategoryData';\nimport { MainNavigation } from '../../components/MainNavigation';\nimport requests from '../../API/category-urls';\n\n// import logo from '../../logo.svg';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className='App'>\n      <MainNavigation cartItemNumber={0} />\n      <div className='container'>\n        <CategoryData\n          title='WEIRDO ORIGINALS'\n          fetchUrl={requests.fetchNetflixOriginals}\n          isLargeRow\n        />\n        <CategoryData title='Trending Now' fetchUrl={requests.fetchTrending} />\n        <CategoryData title='Top Rated' fetchUrl={requests.fetchTopRated} />\n        <CategoryData title='Action Movies' fetchUrl={requests.fetchActionMovies} />\n        <CategoryData title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\n        <CategoryData title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\n        <CategoryData title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\n        <CategoryData title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import ShopContext from '../context/shop-context'\nimport { MainNavigation } from '../../components/MainNavigation'\nimport { IStore } from '../../helpers/types';\n// import { removeProductFromCart } from '../store/actions';\nimport './Cart.css';\n\nexport interface ILandings { \n  landings: IStore\n}\n\nfunction CartPage(props: any) {\n  const cartItemCount = useSelector((state: ILandings) => state);\n  console.log('cartItem', cartItemCount)\n  // const dispatch = useDispatch();\n  console.log('props', props)\n  return (\n    <React.Fragment>\n      {/* <MainNavigation cartItemNumber={this.context.cart.reduce((count, curItem) => {\n              return count + curItem.quantity;\n        }, 0)} \n      /> */}\n      <MainNavigation cartItemNumber={cartItemCount.landings.cartSum || 0} \n      />\n      {/* <main className=\"cart\">\n      Hello\n        {this.context.cart.length <= 0 && <p>No Item in the Cart!</p>}\n        <ul>\n          {this.context.cart.map(cartItem => (\n            <li key={cartItem.id}>\n              <div>\n                <strong>{cartItem.title}</strong> - ${cartItem.price} (\n                {cartItem.quantity})\n              </div>\n              <div>\n                <button\n                  onClick={this.context.removeProductFromCart.bind(\n                    this,\n                    cartItem.id\n                  )}\n                >\n                  Remove from Cart\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main> */}\n    </React.Fragment>\n  );\n}\n\n// const mapStateToProps = (state: any) => {\n//   return {\n//     // cartItems: state.cart,\n//     cartItemCount: state.landings.cartSum\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     removeProductFromCart: id => dispatch(removeProductFromCart(id))\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps\n// )(CartPage);\n\nexport default CartPage\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import ShopContext from '../context/shop-context'\nimport { MainNavigation } from '../../components/MainNavigation'\nimport { IStore } from '../../helpers/types';\n// import { removeProductFromCart } from '../store/actions';\nimport './Liked.css';\n\nexport interface ILandings { \n  landings: IStore\n}\n\nfunction CartPage(props: any) {\n  const cartItemCount = useSelector((state: ILandings) => state);\n  console.log('cartItem', cartItemCount)\n  // const dispatch = useDispatch();\n  console.log('props', props)\n  return (\n    <React.Fragment>\n      {/* <MainNavigation cartItemNumber={this.context.cart.reduce((count, curItem) => {\n              return count + curItem.quantity;\n        }, 0)} \n      /> */}\n      <MainNavigation cartItemNumber={cartItemCount.landings.cartSum || 0} \n      />\n      {/* <main className=\"cart\">\n      Hello\n        {this.context.cart.length <= 0 && <p>No Item in the Cart!</p>}\n        <ul>\n          {this.context.cart.map(cartItem => (\n            <li key={cartItem.id}>\n              <div>\n                <strong>{cartItem.title}</strong> - ${cartItem.price} (\n                {cartItem.quantity})\n              </div>\n              <div>\n                <button\n                  onClick={this.context.removeProductFromCart.bind(\n                    this,\n                    cartItem.id\n                  )}\n                >\n                  Remove from Cart\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main> */}\n    </React.Fragment>\n  );\n}\n\n// const mapStateToProps = (state: any) => {\n//   return {\n//     // cartItems: state.cart,\n//     cartItemCount: state.landings.cartSum\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     removeProductFromCart: id => dispatch(removeProductFromCart(id))\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps\n// )(CartPage);\n\nexport default CartPage\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import ShopContext from '../context/shop-context'\nimport { MainNavigation } from '../../components/MainNavigation'\nimport { IStore } from '../../helpers/types';\n// import { removeProductFromCart } from '../store/actions';\nimport './Profile.css';\n\nexport interface ILandings { \n  landings: IStore\n}\n\nfunction ProfilePage(props: any) {\n  const cartItemCount = useSelector((state: ILandings) => state);\n  console.log('cartItem', cartItemCount)\n  // const dispatch = useDispatch();\n  console.log('props', props)\n  return (\n    <React.Fragment>\n      {/* <MainNavigation cartItemNumber={this.context.cart.reduce((count, curItem) => {\n              return count + curItem.quantity;\n        }, 0)} \n      /> */}\n      <MainNavigation cartItemNumber={cartItemCount.landings.cartSum || 0} \n      />\n      {/* <main className=\"cart\">\n      Hello\n        {this.context.cart.length <= 0 && <p>No Item in the Cart!</p>}\n        <ul>\n          {this.context.cart.map(cartItem => (\n            <li key={cartItem.id}>\n              <div>\n                <strong>{cartItem.title}</strong> - ${cartItem.price} (\n                {cartItem.quantity})\n              </div>\n              <div>\n                <button\n                  onClick={this.context.removeProductFromCart.bind(\n                    this,\n                    cartItem.id\n                  )}\n                >\n                  Remove from Cart\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main> */}\n    </React.Fragment>\n  );\n}\n\n// const mapStateToProps = (state: any) => {\n//   return {\n//     // cartItems: state.cart,\n//     cartItemCount: state.landings.cartSum\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     removeProductFromCart: id => dispatch(removeProductFromCart(id))\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps\n// )(CartPage);\n\nexport default ProfilePage\n","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\n\nimport { Home as HomePage } from './Home'\nimport { Cart as CartPage} from './Cart'\nimport { Liked as LikedPage} from './Liked'\nimport { Profile as ProfilePage} from './Profile'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/cart\" component={CartPage} exact />\n        <Route path=\"/liked\" component={LikedPage} exact />\n        <Route path=\"/profile\" component={ProfilePage} exact />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IStore } from '../../helpers/types';\n\nimport { GET_DATA, LOADING, MODE_TOGGLE } from '../constants';\n\nconst INITIAL_STATE: IStore = {\n    rawData: [],\n    data: [],\n    loading: false,\n    cartSum: 10,\n    likedSum: 5,\n    isLightTheme: true\n}\n\nexport const ACTION_HANDLERS: any = {\n\n    [LOADING]: (state: IStore, action: any) => {\n      return { \n          ...state,\n          loading: true\n      }\n    },\n\n    [MODE_TOGGLE]: (state: IStore, action: any) => {\n        return { \n            ...state,\n            isLightTheme: !state.isLightTheme\n        }\n      },\n\n\n    [GET_DATA]: (state: IStore, action: any) => {\n        const { filter, data } = action\n        let updatedData = [ ...data ]\n        if (filter) {\n            updatedData = updatedData.filter((item: any) => {\n                const year = item.year && new Date(item.year) && new Date(item.year).getFullYear()\n                return year >= filter[0] && year <= filter[1]\n            })\n        }\n        return {\n            ...state,\n            rawData: data,\n            data: updatedData,\n            filter,\n            loading: false\n        }\n    }\n\n}\n\nexport default function AppReducer(state: IStore = INITIAL_STATE, action: any) : IStore {\n    const handler = ACTION_HANDLERS[action.type]\n    return handler ? handler(state, action) : state\n}\n","export const LOADING = 'LOADING'\nexport const GET_DATA = 'GET_DATA'\nexport const MODE_TOGGLE = 'MODE_TOGGLE'\n","import { combineReducers } from 'redux';\r\n\r\nimport HomeReducer from './home-reducer';\r\n\r\nexport const makeRootReducer = () => {\r\n  return combineReducers({\r\n    landings: HomeReducer,\r\n  });\r\n};\r\n\r\nexport default makeRootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './screens/App';\nimport reportWebVitals from './reportWebVitals';\nimport createStore from './redux/store/create-store';\n\nconst store = createStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// import { IStore } from '../../helpers/types';\r\nimport makeRootReducer from '../reducers/reducers';\r\n\r\n// const INITIAL_STATE: IStore = {\r\n//   rawData: [],\r\n//   data: [],\r\n//   loading: false,\r\n//   isLightTheme: true\r\n// }\r\n\r\nconst store = (initialState = {}) => {\r\n  const middleware = [thunk]\r\n  const store = createStore(\r\n    makeRootReducer(),\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  )\r\n  return store;\r\n}\r\n\r\nexport default store\r\n"],"sourceRoot":""}